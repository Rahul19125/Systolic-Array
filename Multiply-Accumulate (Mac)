module MAC_Architecture (
    input wire clk,
    input wire rst,
    input wire signed [31:0] A,
    input wire signed [31:0] B,
    output reg signed [31:0] Y,    
    output reg signed [31:0] X,  
    output reg signed [63:0] C    
);
    reg signed [63:0] P;
    wire signed [63:0] mult;

    assign mult = A * B;

    always @(posedge clk or posedge rst) begin
        if (rst) begin
            P <= 0;
            C <= 0;
            Y <= 0;
            X <= 0;
        end else begin
            P <= mult + P;
            C <= P;
            Y <= A;
            X <= B;
        end
    end
endmodule

